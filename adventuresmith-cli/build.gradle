/*
 * Copyright (c) 2016 Steve Christensen
 *
 * This file is part of Adventuresmith.
 *
 * Adventuresmith is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Adventuresmith is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Adventuresmith.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

apply plugin: 'java'
apply plugin: "kotlin"
apply plugin: 'application'

// http://stackoverflow.com/questions/24870464/android-studio-with-java-library-module-unable-to-load-test-resources
sourceSets {
    test {
        output.resourcesDir = output.classesDir
    }
    main.java.srcDirs += 'src/main/kotlin'
}
//https://code.google.com/p/android/issues/detail?id=64887
task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources
task copyMainResources(type: Copy) {
    from "${projectDir}/src/main/resources"
    into "${buildDir}/classes/main"
}
copyTestResources.dependsOn copyMainResources

dependencies {
    compile project(':adventuresmith-core')
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // for CLI, we'll use logback
    compile group: 'ch.qos.logback', name: 'logback-classic', version: logback_version

    compile group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: argparse4j_version

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

// alternatives to gradle's application:
//    https://github.com/libgdx/packr
//    Capsule https://blog.paralleluniverse.co/2014/05/08/modern-java-pt2/
mainClassName = 'org.stevesea.adventuresmith.cli.AdventuresmithCli'

// to run this:
//   gradlew adventuresmith-cli:run -PgenFile=<fname>
run {
    args += ["run",
             "--i", "${findProperty('genIter') ?: 1}",
             "--locale", "${findProperty('genLocale') ?: 'en_US'}",
             "${findProperty('genFile') ?: 'src/dist/examples/items.yml'}"
    ]
    //jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"]
}

// could also do:

task(runList, dependsOn: 'classes', type: JavaExec) {
    main = 'org.stevesea.adventuresmith.cli.AdventuresmithCli'
    classpath = sourceSets.main.runtimeClasspath
    args 'core-list'
}
task(runExercise, dependsOn: 'classes', type: JavaExec) {
    main = 'org.stevesea.adventuresmith.cli.AdventuresmithCli'
    classpath = sourceSets.main.runtimeClasspath
    args 'core-exercise'
}

task(runGenerateDocs, dependsOn: 'classes', type: JavaExec) {
    main = 'org.stevesea.adventuresmith.cli.AdventuresmithCli'
    classpath = sourceSets.main.runtimeClasspath
    args = ['core-docs','-o','../content_attribution.md']
}

check.dependsOn detekt